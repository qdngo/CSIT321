"""Update email to be foreign key

Revision ID: 9291fbb636e4
Revises: 7b802f5f14e7
Create Date: 2024-12-01 20:34:53.763884

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9291fbb636e4'
down_revision: Union[str, None] = '7b802f5f14e7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Add the 'email' column as nullable initially
    op.add_column('photo_card', sa.Column('email', sa.String(), nullable=True))
    op.add_column('passport', sa.Column('email', sa.String(), nullable=True))
    op.add_column('driver_license', sa.Column('email', sa.String(), nullable=True))

    # Insert default email into the users table if it doesn't exist
    op.execute("""
        INSERT INTO users (email, password, created_at)
        VALUES ('default@example.com', 'placeholder_password', now())
        ON CONFLICT (email) DO NOTHING
    """)

    # Update existing rows with the default email
    op.execute("UPDATE photo_card SET email = 'default@example.com'")
    op.execute("UPDATE passport SET email = 'default@example.com'")
    op.execute("UPDATE driver_license SET email = 'default@example.com'")

    # Once all rows have an email, make the column NOT NULL
    op.alter_column('photo_card', 'email', nullable=False)
    op.alter_column('passport', 'email', nullable=False)
    op.alter_column('driver_license', 'email', nullable=False)

    # Add foreign key constraints
    op.create_foreign_key('fk_photo_card_email', 'photo_card', 'users', ['email'], ['email'])
    op.create_foreign_key('fk_passport_email', 'passport', 'users', ['email'], ['email'])
    op.create_foreign_key('fk_driver_license_email', 'driver_license', 'users', ['email'], ['email'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop foreign key constraints
    op.drop_constraint('fk_photo_card_email', 'photo_card', type_='foreignkey')
    op.drop_constraint('fk_passport_email', 'passport', type_='foreignkey')
    op.drop_constraint('fk_driver_license_email', 'driver_license', type_='foreignkey')

    # Drop the 'email' column
    op.drop_column('photo_card', 'email')
    op.drop_column('passport', 'email')
    op.drop_column('driver_license', 'email')
    # ### end Alembic commands ###
